/*设计一个通用的动画库*/

/*需求分析*/
	1.支持图片预加载
	2.支持2种动画播放方式，及自定义每帧动画
	3.支持单租动画控制循环次数（可支持无限次）
	4.支持一组动画完成，进行下一组动画
	5.支持每个动画完成后有等待时间
	6.支持动画暂停和继续播放
	7.支持动画完成后执行回调函数
	
/*编程接口*/
	1.loadImage(imglist) 					//预加载图片
	2.changePosition(node,positions,imgurl)	//通过改变元素background-position实现动画
	3.changeSrc(node, imglist)				//通过改变image元素的src
	4.enterFrame(callback)					//每一帧动画执行的函数，相当于开发者可以自定义每一帧动画的callabck
	5.repeat(times)							//动画重复执行的次数，time为空时表示无限次
	6.repeatForever()						//五险重复上一次动画，相当于repeat(),更友好的一个接口把
	7.wait(time)							//每个动画执行完后等待的事件
	8.then(callback)						//动画执行完后的回调函数
	9.start(interval)						//动画开始执行，interval表示动画执行间隔
	10.pause()								//动画暂停
	11.restart()							//动画从上一次暂停处重新执行
	12.dispose()							//释放资源
	
/*调用方式*/
	支持链式调用，我们期望动词的方式描述接口，调用方式如下
	
	var animation = require('animation');
	var demo = animation().loadImage(images).changePosition(node, positions).repeat(2).then(function(){})
	demo.start(80)
		
/*代码设计*/
	1.我们把“图片预加载->动画执行->动画结束”等一些列操作看成一条任务链(数组)
		任务链有两种类型：
		a.同步执行完毕的
		b.异步定时执行的(通过计时器或者raf)
		
	2.记录当前任务链的索引
	3.每个人物执行完毕后，通过调用next方法，执行下一个人物，同事更新任务链索引值










