// 设计原则
/*SRP 单一职责原则*/
一个对象(方法只做一件事情)

代理模式 迭代器模式 单例模式 装饰者模式

/*LKP 最少知识原则(迪米特法则)*/
尽量减少对象之间的交互 对象之间不发生直接的联系 减少对象之间的依赖 
封装是最少知识原则的重要体现

中介者模式 外观模式 

/*OCP 开放-封闭原则*/
软件实体(类 模块 函数)等应该是可以扩展的 但是不可以修改
相比于修改源程序 如果通过额外增加几行代码就能解决 那这显然更加简单优雅

发布-订阅模式 模板方法模式 策略模式 代理模式 职责链模式
